@use "sass:math";

$baselineSize: 16px !default;

/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 */
@function dynamic-font($size) {
  /**
   * Multiplying by 1rem appends the rem unit to the number while keeping the number unaltered.
   * Example: 1.25 * 1rem = 1.25rem
   */
  @return (math.div($size, $baselineSize)) * 1rem;
}

/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 */
@function dynamic-font-max($size, $maxScale) {
  $baseScale: dynamic-font($size);
  $maxScale: $size * $maxScale;

  @return min($baseScale, $maxScale);
}

/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * convert to a unit other than $baselineUnit.
 */
@function dynamic-font-min($minScale, $size) {
  $baseScale: dynamic-font($size);
  $minScale: $size * $minScale;

  @return max($minScale, $baseScale);
}

/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 */
@function dynamic-font-clamp($minScale, $baseSize, $maxScale) {
  $baseScale: dynamic-font($baseSize);
  $maxScale: $baseSize * $maxScale;
  $minScale: $baseSize * $minScale;

  @return clamp($minScale, $baseScale, $maxScale);
}
